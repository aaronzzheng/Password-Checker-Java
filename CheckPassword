import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Put a short phrase describing the program here.
 *
 * @author Put your name here
 *
 */
public final class CheckPassword {

    /**
     * No argument constructor--private to prevent instantiation.
     */
    private CheckPassword() {
    }

    /**
     * Checks whether the given String satisfies the OSU criteria for a valid
     * password. Prints an appropriate message to the given output stream.
     *
     * @param passwordCandidate
     *            the String to check
     * @param out
     *            the output stream
     */
    private static void checkPassword(String passwordCandidate,
            SimpleWriter out) {

        final int eight = 8;
        final int three = 3;
        int requirements = 0;

        if (passwordCandidate.length() < eight) {
            out.println(
                    "Your password must be at least 8 characters in length.");
        }

        if (!containsUpperCaseLetter(passwordCandidate)) {
            out.println("Your password does not contain an upper case letter.");
        } else {
            requirements++;
        }
        if (!containsLowerCaseLetter(passwordCandidate)) {
            out.println("Your password does not contain a lower case letter.");
        } else {
            requirements++;
        }
        if (!containsDigit(passwordCandidate)) {
            out.println("Your password does not contain a digit.");
        } else {
            requirements++;
        }
        if (!containsSpecialCharacter(passwordCandidate)) {
            out.println("Your password does not contain a special character.");
        } else {
            requirements++;
        }
        if (requirements >= three) {
            out.println("Your password has met the requirements password!");
        } else {
            out.println("Your password does not meet the requirements.");
        }

    }

    /**
     * Checks if the given String contains an upper case letter.
     *
     * @param str
     *            the String to check
     * @return true if str contains an upper case letter, false otherwise
     */
    private static boolean containsUpperCaseLetter(String str) {
        int length = str.length();
        int i = 0;
        boolean result = false;

        while (i < length && !result) {
            result = Character.isUpperCase(str.charAt(i));
            i++;
        }
        return result;
    }

    /**
     * Checks if the given String contains a lower case letter.
     *
     * @param str
     *            the String to check
     * @return true if str contains a lower case letter, false otherwise
     */
    private static boolean containsLowerCaseLetter(String str) {
        int length = str.length();
        int i = 0;
        boolean result = false;

        while (i < length && !result) {
            result = Character.isLowerCase(str.charAt(i));
            i++;
        }
        return result;
    }

    /**
     * Checks if the given String contains a digit.
     *
     * @param str
     *            the String to check
     * @return true if str contains a digit, false otherwise
     */
    private static boolean containsDigit(String str) {
        int length = str.length();
        int i = 0;
        boolean result = false;

        while (i < length && !result) {
            result = Character.isDigit(str.charAt(i));
            i++;
        }
        return result;
    }

    /**
     * Checks if the given String contains a special character.
     *
     * @param str
     *            the String to check
     * @return true if str contains a special character, false otherwise
     */
    private static boolean containsSpecialCharacter(String str) {

        String[] special = { "!", "@", "#", "$", "%", "^", "&", "*", "(", ")",
                "_", "-", "+", "=", "{", "}", "[", "]", ":", ";", ",", ".",
                "?" };
        int specialLength = special.length;
        int i = 0;
        boolean result = false;
        while (i < specialLength && !result) {
            result = str.contains(special[i]);
            i++;
        }
        return result;
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        SimpleReader in = new SimpleReader1L();
        SimpleWriter out = new SimpleWriter1L();

        out.println("Enter a password candidate: ");
        String password = in.nextLine();

        while (!password.isEmpty()) {
            checkPassword(password, out);

            out.println("Enter a password candidate, enter nothing to quit: ");
            password = in.nextLine();
        }

        in.close();
        out.close();
    }

}
